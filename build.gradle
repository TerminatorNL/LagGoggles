buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

repositories {
    maven {
        url "https://cursemaven.com"
    }
}

apply plugin: 'net.minecraftforge.gradle'
String LagGogglesVersion = "1.12.2-5.9"

ext.GetCommitCount = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--all', '--count'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = LagGogglesVersion + "-" + GetCommitCount.call()
group= "com.github.terminatornl.laggoggles" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "LagGoggles"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << "-XDignore.symbol.file"
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    runs {
        client {
            workingDirectory project.file('runClient')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
        server {
            workingDirectory project.file('runServer')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }

//    replaceIn "Main.java"
   // replace '${version}', project.version
}

configurations {
    compileOnly.transitive = false
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    compileOnly "curse.maven:tickcentral-377201:3140670"
}

jar {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "Terminator_NL",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Terminator_NL",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task clearMods(type: Delete) {
    delete fileTree('runServerObf/mods')
}

task installJar(type: Copy, dependsOn: [build, clearMods]) {
    from("$buildDir/libs") {
        include("${archivesBaseName}-${version}.jar")
    }
    into "runServerObf/mods"
}

task installObfMods(type: Copy, dependsOn: installJar) {
    from configurations.compileOnly
    into "runServerObf/mods"
}